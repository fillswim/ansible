---
# tasks file for 04-Adding-Other-Nodes

# ============================================== Ping ==============================================

- name: Начало выполнения Playbook-а
  become: true
  ansible.builtin.ping:

# ============================ Проверка, что нода существует в inventory ===========================

- name: Завершение выполнение плэйбука, так как добавляемая нода не найдена в inventory (при наличии extra_vars added_node)
  ansible.builtin.meta: end_play
  when: # extra_vars added_node определен и added_node нет ни в k8s_masters, ни в k8s_workers
    - (added_node is defined)
      and 
      ((added_node not in groups['k8s_masters']) 
      and 
      (added_node not in groups['k8s_workers']))           

# ======================================= Block on Master[1] =======================================

- name: Block on the 1-st Master
  become: true
  when:
    - inventory_hostname == groups['k8s_masters'][0]      # Выполняется только на 1-м Мастере
  block:

    # ====================== Get all added nodes ======================

    - name: Get all added nodes
      ignore_errors: true
      changed_when: false
      ansible.builtin.shell: |
        kubectl get nodes --no-headers | awk '{print $1}'
      register: all_added_nodes

    - name: Create variable all_added_nodes
      ansible.builtin.set_fact:
        all_added_nodes: "{{ all_added_nodes.stdout }}"

    - name: Show all_added_nodes
      ansible.builtin.debug:
        var: all_added_nodes
    
    # ========== Проверка, что нода уже добавлена в кластер ===========

    - name: Завершение выполнение плэйбука, так как добавляемая нода уже добавлена в кластер ранее
      ansible.builtin.meta: end_play
      when: # extra_vars added_node определен и added_node уже находится в перечне нод кластера
        - (added_node is defined)
          and 
          (added_node in all_added_nodes)  

    # ========================= Get join_path =========================

    - name: Get join_path
      ansible.builtin.shell: kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}' | cut -c9-
      register: join_path

    - name: Create variable join_path
      ansible.builtin.set_fact:
        join_path: "{{ join_path.stdout }}"

    - name: Show join_path
      ansible.builtin.debug:
        var: join_path

    # ======================== Get join_token =========================

    - name: Get join_token
      ansible.builtin.shell: kubeadm token create
      register: join_token

    - name: Create variable join_token
      ansible.builtin.set_fact:
        join_token: "{{ join_token.stdout }}"

    - name: Show join_token
      ansible.builtin.debug:
        var: join_token

    # ======================= Get ca_cert_hash ========================

    - name: Get ca_cert_hash
      ansible.builtin.shell: |
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | \
        openssl rsa -pubin -outform der 2>/dev/null | \
        openssl dgst -sha256 -hex | sed 's/^.* //'
      register: ca_cert_hash

    - name: Create variable ca_cert_hash
      ansible.builtin.set_fact:
        ca_cert_hash: "{{ ca_cert_hash.stdout }}"

    - name: Show ca_cert_hash
      ansible.builtin.debug:
        var: ca_cert_hash

    # ===================== Get certificate_key =======================

    - name: Get certificate_key
      ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs | tail -1
      register: certificate_key

    - name: Create variable certificate_key
      ansible.builtin.set_fact:
        certificate_key: "{{ certificate_key.stdout }}"

    - name: Show certificate_key
      ansible.builtin.debug:
        var: certificate_key

# ====================================== Block on Added Masters ====================================

- name: Block on Added Master
  become: true
  when: # Выполняется на всех мастерах, кроме первого, или на указанном мастере (added_node), если нода уже не добавлена в кластер
    - (inventory_hostname not in hostvars[groups['k8s_masters'][0]].all_added_nodes)
      and
      ((added_node is undefined) and (inventory_hostname in groups['k8s_masters'][1:]))
      or 
      ((added_node is defined) 
        and (inventory_hostname in added_node) 
        and ("'master' in added_node") 
        and (added_node in groups['k8s_masters'][1:]))
  block:

    - name: Checking that the node is already attached
      ansible.builtin.stat:
        path: "/etc/kubernetes/pki/ca.key"
      register: kubeadm_ca

    - name: Join control node {{ inventory_hostname }}
      when: not kubeadm_ca.stat.exists
      ansible.builtin.shell:
        cmd: |
          kubeadm join {{ hostvars[groups['k8s_masters'][0]].join_path }} \
          --token {{ hostvars[groups['k8s_masters'][0]].join_token }} \
          --discovery-token-ca-cert-hash sha256:{{ hostvars[groups['k8s_masters'][0]].ca_cert_hash }} \
          --certificate-key {{ hostvars[groups['k8s_masters'][0]].certificate_key }} \
          --node-name {{ inventory_hostname }} \
          --control-plane

    - name: Создание папки /root/.kube
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        owner: root
        group: root
        mode: "0775"

    - name: Copy /etc/kubernetes/admin.conf to /root/.kube/config
      become: true
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: true
        owner: root
        group: root
        mode: "0600"

    - name: Pause for 30 seconds
      ansible.builtin.pause:
        seconds: 30

    - name: Rollout Restart CoreDNS
      ansible.builtin.shell: kubectl -n kube-system rollout restart deployment coredns

# ====================================== Block on Added Workers ====================================

- name: Block on Added Workers
  become: true
  when: # Выполняется (по дефолту) на всех воркерах или на указанном воркере (added_node), если нода уже не добавлена в кластер
    - (inventory_hostname not in hostvars[groups['k8s_masters'][0]].all_added_nodes)
      and
      ((added_node is undefined) and (inventory_hostname in groups['k8s_workers']))
      or 
      ((added_node is defined) 
        and (inventory_hostname in added_node) 
        and ("'worker' in added_node") 
        and (added_node in groups['k8s_workers']))
  block:

    - name: Checking that the node is already attached
      ansible.builtin.stat:
        path: "/etc/kubernetes/pki/ca.key"
      register: kubeadm_ca

    - name: Join control node {{ inventory_hostname }}
      when: not kubeadm_ca.stat.exists
      ansible.builtin.shell:
        cmd: |
          kubeadm join {{ hostvars[groups['k8s_masters'][0]].join_path }} \
          --token {{ hostvars[groups['k8s_masters'][0]].join_token }} \
          --discovery-token-ca-cert-hash sha256:{{ hostvars[groups['k8s_masters'][0]].ca_cert_hash }} \
          --node-name {{ inventory_hostname }}