---
# tasks file for 01-prepare-vm-for-k8s
- name: Block for RedHat
  when: ansible_os_family == "RedHat"
  become: true
  block:
    - name: Add repo kubernetes
      ansible.builtin.yum_repository:
        name: kubernetes
        description: 'Base programs for k8s'
        baseurl: 'https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64'
        gpgcheck: true
        gpgkey:
          - 'https://packages.cloud.google.com/yum/doc/yum-key.gpg'
          - 'https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'

    - name: Docker repository for containerd
      ansible.builtin.yum_repository:
        name: docker
        enabled: true
        baseurl: "https://download.docker.com/linux/centos/$releasever/$basearch/stable"
        description: 'Docker'
        gpgcheck: true
        gpgkey:
          - 'https://download.docker.com/linux/centos/gpg'

    - name: Install packages dnf
      ansible.builtin.dnf:
        name:
          - net-tools
          - mc
          - iproute-tc
          - vim
          - git
          - bash-completion
          - nfs-utils
          - python3
          - tar
          - rsyslog
          - chrony
          - containerd
          - jq
          - kubectl-{{ kube_version }}-0.x86_64
          - kubelet-{{ kube_version }}-0.x86_64
          - kubeadm-{{ kube_version }}-0.x86_64
          - ipvsadm
        state: latest

- name: Block for Debian
  when: ansible_os_family == "Debian"
  become: true
  block:
    - name: Install packages apt
      ansible.builtin.apt:
        name:
          - net-tools
          - mc
          - vim
          - git
          - bash-completion
          - nfs-utils
          - python3
          - tar
          - rsyslog
          - chrony
          - containerd
        state: latest

- name: Disable firewalld
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false

- name: Check is swap enable
  ansible.builtin.shell: swapon
  register: swap_present
  changed_when: false
  ignore_errors: true

- name: If swap is enabled - disable it
  ansible.builtin.shell: swapoff -a
  when: swap_present.stdout != ""

- name: Disable SWAP in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*\s*swap\s*.*)$'
    replace: '# \1'

- name: Check Disable SELinux
  ansible.posix.selinux:
    state: disabled
  register: selinux_ret

- name: Disable SELinux
  ansible.builtin.shell: setenforce 0
  when: selinux_ret.reboot_required

- name: Remove containerd config.toml
  when: ansible_os_family == "RedHat"
  ansible.builtin.file:
    path: /etc/containerd/config.toml
    state: absent

- name: Start and enable containerd
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: yes

- name: Set crictl.yaml
  ansible.builtin.copy:
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: root
    mode: 0644

- name: Load modules
  community.general.modprobe:
    name: br_netfilter

- name: Load module permanet
  ansible.builtin.copy:
    src: modules-kubernetes.conf
    dest: /etc/modules-load.d/modules-kubernetes.conf

- name: Set Sysctl on all nodes
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_forward
      value: 1
    - name: net.bridge.bridge-nf-call-iptables
      value: 1
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - name: vm.max_map_count # for opensearch & elasticserarch
      value: 262144

- name: Set Sysctl on master node(s)
  when: inventory_hostname in groups['k8s_alma_masters']
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_nonlocal_bind
      value: 1

- name: Add PS1
  ansible.builtin.lineinfile:
    path: /root/.bashrc
    state: present
    line: "PS1='\\[\\e[44;36m\\]\\t:[\\w]\\[\\e[0;0m\\]\\n\\[\\e[0;31;04m\\]\\u\\[\\e[0;0m\\]@\\[\\e[0;32m\\]\\h\\[\\e[0;0m\\] \\$ '"

- name: Reboot
  become: true
  ansible.builtin.reboot: